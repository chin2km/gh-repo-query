{"version":3,"sources":["app/components/molecules/ErrorView.tsx","app/components/organisms/RepositoryInput.tsx","app/components/organisms/Navigation.tsx","app/pages/SharedHeader.tsx","app/pages/issues/Issues.tsx"],"names":["ErrorView","message","Container","data-testid","size","TokenWarning","includes","styled","section","RepositoryInput","useRepositoryNameState","repoName","debouncedRepoName","setRepoName","useOwnerNameState","ownerName","debouncedOwnerName","setOwnerName","updatedNameOrOwner","usePrevious","history","useHistory","useEffect","push","SpacedSpan","placeholder","value","onChange","event","target","span","Navigation","basename","pathname","useLocation","NavigationWrapper","StyledLink","to","$active","nav","Link","WithSharedHeader","InnerComponent","useBasePathFromUrl","currentUrl","useSearchKeyword","searchKeyword","setSearchKeyword","debouncedSearchKeyword","useIssueState","issueState","setIssueState","useRepoAndOwnerUrlSlugs","owner","repo","query","useGetIssuesQuery","variables","toLowerCase","trim","fetchPolicy","loading","data","FilterContainer","width","Group","useRow","IssueState","Open","Closed","search","issueCount","nodes","map","node","index","__typename","IssueWrapper","hoverable","number","IssueTitle","title","Author","src","author","avatarUrl","Date","createdAt","toDateString","login","error","div","Card"],"mappings":"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","file":"static/js/5.ce38f4ba.chunk.js","sourcesContent":["import { Divider, Page } from '@geist-ui/react'\nimport React from 'react'\nimport Github from '@geist-ui/react-icons/github'\nimport styled from 'styled-components'\n\n\nexport const ErrorView: React.FC<{ message?: string }> = ({ message }) => {\n    return (\n        <Page>\n            <Container data-testid=\"error-message\">\n                <Github size={100} />\n                <Divider />\n                {message}\n                <TokenWarning message={message} />\n            </Container>\n        </Page>\n    )\n}\n\nexport const TokenWarning: React.FC<{ message?: string }> = ({ message }) => {\n    return message?.includes('status code 401') ?\n        <>\n            <Divider />\n            <h5>Not Authenticated. Pass a valid github Personal Access Token in the query parameter</h5>\n            <h6>eg: ?token=you_personal_access_token</h6>\n        </>\n        : null\n}\n\n\nconst Container = styled.section`\n    box-sizing: border-box;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n","import { Input } from '@geist-ui/react'\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport { useOwnerNameState, usePrevious, useRepositoryNameState } from '../../hooks';\n\nexport const RepositoryInput = () => {\n    const { repoName, debouncedRepoName, setRepoName } = useRepositoryNameState();\n    const { ownerName, debouncedOwnerName, setOwnerName } = useOwnerNameState();\n    const updatedNameOrOwner = usePrevious({ debouncedRepoName, debouncedOwnerName });\n\n    const history = useHistory();\n    useEffect(() => {\n        if (updatedNameOrOwner &&\n            (updatedNameOrOwner.debouncedOwnerName !== debouncedOwnerName\n                || updatedNameOrOwner.debouncedRepoName !== debouncedRepoName\n            )) {\n            history.push(`/${debouncedOwnerName}/${debouncedRepoName}`);\n        }\n    }, [debouncedOwnerName, debouncedRepoName, history, updatedNameOrOwner]);\n\n    return (\n        <Container>\n            <SpacedSpan>You are viewing repository</SpacedSpan>\n            <Input data-testid=\"repository-input\" size=\"large\" placeholder=\"repository\" value={repoName} onChange={(event) => setRepoName(event.target.value)} />\n\n            <SpacedSpan>by</SpacedSpan>\n            <Input data-testid=\"owner-input\" size=\"large\" placeholder=\"owner\" value={ownerName} onChange={(event) => setOwnerName(event.target.value)} />\n        </Container>\n    )\n}\n\nconst Container = styled.section`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0.5rem;\n    position: sticky;\n    top: 0;\n    background-color: rgb(255 255 255 / 70%);\n    backdrop-filter: blur(5px);\n    z-index: 20;\n    width: 100%;\n`;\n\nconst SpacedSpan = styled.span`\n    margin: 0 1rem;\n`;\n\n","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport styled from 'styled-components';\n\nexport const Navigation: React.FC<{ basename: string }> = ({ basename }) => {\n    const { pathname } = useLocation();\n\n    return (\n        <NavigationWrapper>\n            <StyledLink to={basename} $active={pathname === basename}>\n                Home\n            </StyledLink>\n            <StyledLink to={`${basename}/issues`} $active={pathname === `${basename}/issues`}>\n                Issues\n            </StyledLink>\n        </NavigationWrapper>\n    )\n};\n\n\nconst NavigationWrapper = styled.nav`\n    display: flex;\n    justify-content: center;\n    box-sizing: border-box;\n    padding: 1rem;\n    position: sticky;\n    top: 56px;\n    z-index: 20;\n    margin-bottom: 2rem;\n    width: 100%;\n\n    background-color: rgb(255 255 255 / 70%);\n    backdrop-filter: blur(5px);\n    box-shadow: rgb(130 130 130 / 10%) 0px 8px 7px 0px, rgb(0 0 0 / 9%) 2px 3px 5px 0px;\n`;\n\nconst StyledLink = styled(Link) <{ $active: boolean }>`\n    line-height: 2rem;\n    color: black;\n    margin: 0 0.5rem;\n    box-sizing: border-box;\n    border-bottom: solid 2px;\n    border-color: ${({ $active }) => ($active ? 'black' : 'transparent')};\n\n    &:hover {\n        border-color: black;\n    }\n`;\n\n\n","import React from 'react'\nimport { RepositoryInput } from '../components/organisms/RepositoryInput'\nimport { Navigation } from '../components/organisms/Navigation'\nimport { useBasePathFromUrl } from '../hooks'\n\nexport const WithSharedHeader = (InnerComponent: React.ComponentType) => {\n    const WrappedComponent: React.FC = () => {\n        return (\n            <>\n                <RepositoryInput />\n                <Navigation basename={useBasePathFromUrl()} />\n                <InnerComponent />\n            </>\n        )\n    }\n    return WrappedComponent;\n}\n","import { Avatar, Badge, Card, Divider, Input, Radio } from '@geist-ui/react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { LoadingLayout } from '../../components/atoms/LoadingLayout';\nimport { ErrorView } from '../../components/molecules/ErrorView';\nimport { IssueState, useGetIssuesQuery } from '../../gql';\nimport { useBasePathFromUrl, useIssueState, useRepoAndOwnerUrlSlugs, useSearchKeyword } from '../../hooks';\nimport { WithSharedHeader } from '../SharedHeader';\n\nconst Issues = () => {\n    const currentUrl = useBasePathFromUrl();\n    const { searchKeyword, setSearchKeyword, debouncedSearchKeyword } = useSearchKeyword();\n    const { issueState, setIssueState } = useIssueState()\n\n    const { owner, repo } = useRepoAndOwnerUrlSlugs();\n    const query = useGetIssuesQuery({\n        variables: {\n            query: `\n                repo:${owner}/${repo}\n                is:issue\n                is:${issueState.toLowerCase()}\n                ${debouncedSearchKeyword}\n            `.trim()\n        },\n        fetchPolicy: \"cache-first\",\n    });\n\n    if (query.loading) {\n        return <LoadingLayout />\n    }\n\n    if (query.data) {\n        return (\n            <Container>\n                <FilterContainer>\n                    <div>\n                        Search in title or content:\n                        <Input placeholder=\"type search term\" width=\"100%\" value={searchKeyword} onChange={({ target: { value } }) => setSearchKeyword(value)} data-testid=\"search-repo\" />\n                    </div>\n                    <div>\n                        State:\n                        <Radio.Group value={issueState} onChange={value => setIssueState(value as IssueState)} useRow>\n                            <Radio value={IssueState.Open}>Open</Radio>\n                            <Radio value={IssueState.Closed}>Closed</Radio>\n                        </Radio.Group>\n                    </div>\n                </FilterContainer>\n\n                <Divider>\n                    Issues: <Badge>{query.data.search.issueCount}</Badge>\n                </Divider>\n\n                <Card data-testid=\"issues-list\">\n                    {query.data.search.nodes?.map((node, index) => {\n                        return node?.__typename === \"Issue\" && (\n                            <IssueWrapper key={index} hoverable>\n                                <StyledLink to={`${currentUrl}/issues/${node.number}`} data-testid=\"issue-link\">\n                                    <IssueTitle data-testid=\"issue-title\">\n                                        {node?.title}\n                                    </IssueTitle>\n                                    <Author>\n                                        <Avatar src={node.author?.avatarUrl} size=\"mini\" />\n                                        <span>\n                                            Opened on {new Date(node.createdAt).toDateString()} by <i>{node.author?.login}</i>\n                                        </span>\n                                    </Author>\n                                </StyledLink>\n                            </IssueWrapper>\n                        )\n                    })}\n                </Card>\n            </Container>\n        )\n    }\n\n\n    if (query.error) {\n        return <ErrorView message={query.error?.message} />\n    }\n\n    return null;\n}\nexport default WithSharedHeader(Issues);\n\nconst Container = styled.section`\n    box-sizing: border-box;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    margin: auto;\n`\n\nconst FilterContainer = styled.section`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 2rem;\n    gap: 2rem;\n    justify-content: center;\n`\n\n\nconst IssueTitle = styled.div`\n    margin-bottom: 0.5rem;\n`;\n\nconst Author = styled.div`\n    color: #333;\n    font-size: 12px;\n\n    span {\n        margin-left: 0.5rem;\n    }\n`;\n\nconst IssueWrapper = styled(Card)`\n  min-height: 75px;\n  margin-bottom: 0.5rem !important;\n`\n\nconst StyledLink = styled(Link)`\n    transition: all 0.3s ease-in-out;\n    border-bottom: solid 1.5px transparent;\n\n    &:hover {\n        color: #04b177 !important;\n        border-color: #999;\n    }\n`\n"],"sourceRoot":""}
{"version":3,"sources":["app/components/molecules/ErrorView.tsx","app/components/organisms/RepositoryInput.tsx","app/components/organisms/Navigation.tsx","app/pages/SharedHeader.tsx","app/pages/issue-details/IssueDetails.tsx"],"names":["ErrorView","children","Container","data-testid","size","styled","section","RepositoryInput","useRepositoryNameState","repoName","debouncedRepoName","setRepoName","useOwnerNameState","ownerName","debouncedOwnerName","setOwnerName","updatedNameOrOwner","usePrevious","history","useHistory","useEffect","push","SpacedSpan","placeholder","value","onChange","event","target","span","Navigation","basename","pathname","useLocation","NavigationWrapper","StyledLink","to","$active","nav","Link","WithSharedHeader","InnerComponent","useBasePathFromUrl","useRepoAndOwnerUrlSlugs","owner","repo","query","useGetIssueDetailsQuery","variables","issueId","Number","useParams","id","fetchPolicy","loading","data","repository","issue","block","Commenter","href","author","url","stacked","src","avatarUrl","login","Date","createdAt","toDateString","dangerouslySetInnerHTML","__html","title","bodyHTML","comments","totalCount","Group","accordion","nodes","map","comment","index","CommentsWrapper","initialVisible","shadow","subtitle","error","message","aside"],"mappings":"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","file":"static/js/4.9dc6b2ff.chunk.js","sourcesContent":["import { Divider, Page } from '@geist-ui/react'\nimport React from 'react'\nimport Github from '@geist-ui/react-icons/github'\nimport styled from 'styled-components'\n\n\nexport const ErrorView: React.FC = ({ children }) => {\n    return (\n        <Page>\n            <Container data-testid=\"error-message\">\n                <Github size={100} />\n                <Divider />\n                {children}\n            </Container>\n        </Page>\n    )\n}\n\nconst Container = styled.section`\n    box-sizing: border-box;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n","import { Input } from '@geist-ui/react'\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport { useOwnerNameState, usePrevious, useRepositoryNameState } from '../../hooks';\n\nexport const RepositoryInput = () => {\n    const { repoName, debouncedRepoName, setRepoName } = useRepositoryNameState();\n    const { ownerName, debouncedOwnerName, setOwnerName } = useOwnerNameState();\n    const updatedNameOrOwner = usePrevious({ debouncedRepoName, debouncedOwnerName });\n\n    const history = useHistory();\n    useEffect(() => {\n        if (updatedNameOrOwner &&\n            (updatedNameOrOwner.debouncedOwnerName !== debouncedOwnerName\n                || updatedNameOrOwner.debouncedRepoName !== debouncedRepoName\n            )) {\n            history.push(`/${debouncedOwnerName}/${debouncedRepoName}`);\n        }\n    }, [debouncedOwnerName, debouncedRepoName, history, updatedNameOrOwner]);\n\n    return (\n        <Container>\n            <SpacedSpan>You are viewing repository</SpacedSpan>\n            <Input data-testid=\"repository-input\" size=\"large\" placeholder=\"repository\" value={repoName} onChange={(event) => setRepoName(event.target.value)} />\n\n            <SpacedSpan>by</SpacedSpan>\n            <Input data-testid=\"owner-input\" size=\"large\" placeholder=\"owner\" value={ownerName} onChange={(event) => setOwnerName(event.target.value)} />\n        </Container>\n    )\n}\n\nconst Container = styled.section`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0.5rem;\n    position: sticky;\n    top: 0;\n    background-color: rgb(255 255 255 / 70%);\n    backdrop-filter: blur(5px);\n    z-index: 20;\n    width: 100%;\n`;\n\nconst SpacedSpan = styled.span`\n    margin: 0 1rem;\n`;\n\n","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport styled from 'styled-components';\n\nexport const Navigation: React.FC<{ basename: string }> = ({ basename }) => {\n    const { pathname } = useLocation();\n\n    return (\n        <NavigationWrapper>\n            <StyledLink to={basename} $active={pathname === basename}>\n                Home\n            </StyledLink>\n            <StyledLink to={`${basename}/issues`} $active={pathname === `${basename}/issues`}>\n                Issues\n            </StyledLink>\n        </NavigationWrapper>\n    )\n};\n\n\nconst NavigationWrapper = styled.nav`\n    display: flex;\n    justify-content: center;\n    box-sizing: border-box;\n    padding: 1rem;\n    position: sticky;\n    top: 56px;\n    z-index: 20;\n    margin-bottom: 2rem;\n    width: 100%;\n\n    background-color: rgb(255 255 255 / 70%);\n    backdrop-filter: blur(5px);\n    box-shadow: rgb(130 130 130 / 10%) 0px 8px 7px 0px, rgb(0 0 0 / 9%) 2px 3px 5px 0px;\n`;\n\nconst StyledLink = styled(Link) <{ $active: boolean }>`\n    line-height: 2rem;\n    color: black;\n    margin: 0 0.5rem;\n    box-sizing: border-box;\n    border-bottom: solid 2px;\n    border-color: ${({ $active }) => ($active ? 'black' : 'transparent')};\n\n    &:hover {\n        border-color: black;\n    }\n`;\n\n\n","import React from 'react'\nimport { RepositoryInput } from '../components/organisms/RepositoryInput'\nimport { Navigation } from '../components/organisms/Navigation'\nimport { useBasePathFromUrl } from '../hooks'\n\nexport const WithSharedHeader = (InnerComponent: React.ComponentType) => {\n    const WrappedComponent: React.FC = () => {\n        return (\n            <>\n                <RepositoryInput />\n                <Navigation basename={useBasePathFromUrl()} />\n                <InnerComponent />\n            </>\n        )\n    }\n    return WrappedComponent;\n}\n","import { Avatar, Code, Collapse, Divider, Link } from '@geist-ui/react';\nimport { useParams } from 'react-router';\nimport styled from 'styled-components';\nimport { LoadingLayout } from '../../components/atoms/LoadingLayout';\nimport { ErrorView } from '../../components/molecules/ErrorView';\nimport { useGetIssueDetailsQuery } from '../../gql';\nimport { useRepoAndOwnerUrlSlugs } from '../../hooks';\nimport { WithSharedHeader } from '../SharedHeader';\n\nconst IssueDetails = () => {\n    const { owner, repo } = useRepoAndOwnerUrlSlugs();\n    const query = useGetIssueDetailsQuery({\n        variables: {\n            repo,\n            owner,\n            issueId: Number(useParams<{ id: string }>().id)\n        },\n        fetchPolicy: \"cache-first\",\n    });\n\n    if (query.loading) {\n        return <LoadingLayout />\n    }\n\n    if (query.data?.repository?.issue) {\n        const issue = query.data.repository.issue;\n        return (\n            <Container>\n                <Code block>\n                    <Commenter href={issue.author?.url} target=\"_blank\">\n                        <Avatar stacked src={issue.author?.avatarUrl} size=\"medium\" />\n                        <h3>{` ${issue.author?.login} `}</h3>\n                        <h6><i>{`opened this issue on ${new Date(issue.createdAt).toDateString()}`}</i></h6>\n                    </Commenter>\n                    <h2 dangerouslySetInnerHTML={{ __html: issue.title }} />\n                    <div dangerouslySetInnerHTML={{ __html: issue.bodyHTML }} />\n                </Code>\n\n                <Divider>Comments {issue.comments.totalCount}</Divider>\n\n                <Collapse.Group accordion={false}>\n                    {issue.comments.nodes?.map((comment, index) => {\n                        return (\n                            <CommentsWrapper key={index}>\n                                <Commenter href={comment?.author?.url} target=\"_blank\">\n                                    <Avatar stacked src={comment?.author?.avatarUrl} size=\"medium\" />\n                                </Commenter>\n                                <Collapse\n                                    initialVisible\n                                    shadow\n                                    title={comment?.author?.login!}\n                                    subtitle={`commented on ${(new Date(comment?.createdAt)).toDateString()}`}>\n                                    <div dangerouslySetInnerHTML={{ __html: comment?.bodyHTML }} />\n                                </Collapse>\n                            </CommentsWrapper>\n                        )\n                    })}\n                </Collapse.Group>\n            </Container>\n        )\n    }\n\n    if (query.error) {\n        return <ErrorView>{query.error?.message}</ErrorView>\n    }\n\n\n    return null;\n}\nexport default WithSharedHeader(IssueDetails);\n\nconst Commenter = styled(Link)`\n    box-sizing: border-box;\n    margin-bottom: 2rem;\n    display: flex;\n    flex-direction: row;\n    justify-content: center !important;\n    align-items: center !important;\n    h3, h6 {\n        margin: 0;\n    }\n`;\n\nconst CommentsWrapper = styled.aside`\n    width: 80%;\n    margin: auto;\n    contain: layout;\n    content-visibility: visible;\n\n    ${Commenter} {\n        margin-left: -5rem !important;\n        margin-top: 1.5rem !important;\n        position: absolute;\n    }\n`;\n\nconst Container = styled.section`\n    width: 80%;\n    margin: auto;\n    box-sizing: border-box;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n\n    h2 {\n        font-size: 18px !important;\n    }\n    h3 {\n        font-size: 16px !important;\n    }\n`;"],"sourceRoot":""}